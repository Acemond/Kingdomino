require("util/table")
require("constants/guids")
require("constants/domino_board")

function dealTile(tileGuid, position)
  local guid = tileGuid
  if #self.getObjects() == 0 then
    guid = nil
  end

  self.takeObject({
    guid = guid,
    position = position,
    rotation = { 0, 180, 180 },
    callback_function = function(obj)
      obj.flip()
      Wait.condition(function()
        obj.lock()
      end, function()
        return obj.getPosition().y < 1.24
      end, 180, function()
        obj.lock()
      end)
    end
  })
end

function dealTiles()
  for guid, position in pairs(getTilesTargetPosition()) do
    dealTile(guid, position)
  end
end

function getTilesTargetPosition()
  local guids = getObjectsGuids()
  table.sort(guids, function(a, b)
    return table.indexOf(Guids.dominoes.queendomino, a) < table.indexOf(Guids.dominoes.queendomino, b)
  end)

  local position = {}
  for i, guid in ipairs(guids) do
    local board_size = Global.getTable("game").settings.tile_deal_count
    local right_board = getObjectFromGUID(DominoBoardConstants.right_boards[board_size].guid)
    position[guid] = {
      0 + right_board.getPosition().x,
      1.8,
      DominoBoardConstants.snap_points_z_positions[board_size][i] * right_board.getScale().z + right_board.getPosition().z
    }
  end
  return position
end

function getObjectsGuids()
  local tiles = self.getObjects()
  local guids = {}
  local tilesDealtPerTurn = 4
  if Global.getTable("game").settings.tile_deal_count == 8 then
    tilesDealtPerTurn = 8
  end
  for i = 1, tilesDealtPerTurn, 1 do
    guids[i] = tiles[i].guid
  end
  return guids
end
